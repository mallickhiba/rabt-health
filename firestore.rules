/**
 * @file Overview
 * This ruleset enforces a strict user-ownership model, where each user can only access data associated with their user ID.
 *
 * Data Structure:
 * All patient data and related information (transcripts, SOAP notes, instructions) are nested under the `/users/{userId}/patients/{patientId}` path.
 *
 * Key Security Decisions:
 * - Users can only manage data associated with their own user ID (path-based ownership).
 * - Data consistency is enforced by matching path parameters with document fields.
 * - Listing operations are allowed only for the owner of the data.
 *
 * Denormalization for Authorization:
 * The data model relies on path-based ownership (userId in the path matches request.auth.uid), eliminating the need for additional `get()` calls to determine ownership.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the requested user ID matches the authenticated user's ID.
     * @param {string} userId - The user ID to check against.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the user is the owner and the resource exists (for update/delete).
     * @param {string} userId - The user ID to check against.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && exists(resource);
    }

    /**
     * @description Enforces that the incoming document ID matches the document ID in the path.
     * @param {string} documentId - The document ID from the path.
     */
    function isValidDocumentIdOnCreate(documentId) {
        return request.resource.data.id == documentId;
    }

    /**
     * @description Enforces that the document ID in the data matches the resource document ID to prevent changes
     * @param {string} documentId - The document ID from the path.
     */
    function isValidDocumentIdOnUpdate(documentId) {
        return request.resource.data.id == resource.data.id;
    }

    /**
     * @description Rules for /users/{userId}/patients/{patientId} collection.
     * @path /users/{userId}/patients/{patientId}
     * @allow (create) - User with UID 'user123' can create a patient document under /users/user123/patients/patient456.
     * @allow (get) - User with UID 'user123' can read a patient document under /users/user123/patients/patient456.
     * @allow (list) - User with UID 'user123' can list patient documents under /users/user123/patients.
     * @allow (update) - User with UID 'user123' can update a patient document under /users/user123/patients/patient456.
     * @allow (delete) - User with UID 'user123' can delete a patient document under /users/user123/patients/patient456.
     * @deny (create) - User with UID 'user456' cannot create a patient document under /users/user123/patients/patient456 (mismatched userId).
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/patients/{patientId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Rules for /users/{userId}/patients/{patientId}/transcripts/{transcriptId} collection.
     * @path /users/{userId}/patients/{patientId}/transcripts/{transcriptId}
     * @allow (create) - User with UID 'user123' can create a transcript document under /users/user123/patients/patient456/transcripts/transcript789.
     * @allow (get) - User with UID 'user123' can read a transcript document under /users/user123/patients/patient456/transcripts/transcript789.
     * @allow (list) - User with UID 'user123' can list transcript documents under /users/user123/patients/patient456/transcripts.
     * @allow (update) - User with UID 'user123' can update a transcript document under /users/user123/patients/patient456/transcripts/transcript789.
     * @allow (delete) - User with UID 'user123' can delete a transcript document under /users/user123/patients/patient456/transcripts/transcript789.
     * @deny (create) - User with UID 'user456' cannot create a transcript document under /users/user123/patients/patient456/transcripts/transcript789 (mismatched userId).
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/patients/{patientId}/transcripts/{transcriptId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Rules for /users/{userId}/patients/{patientId}/soap_notes/{soapNoteId} collection.
     * @path /users/{userId}/patients/{patientId}/soap_notes/{soapNoteId}
     * @allow (create) - User with UID 'user123' can create a soap note document under /users/user123/patients/patient456/soap_notes/soap789.
     * @allow (get) - User with UID 'user123' can read a soap note document under /users/user123/patients/patient456/soap_notes/soap789.
     * @allow (list) - User with UID 'user123' can list soap note documents under /users/user123/patients/patient456/soap_notes.
     * @allow (update) - User with UID 'user123' can update a soap note document under /users/user123/patients/patient456/soap_notes/soap789.
     * @allow (delete) - User with UID 'user123' can delete a soap note document under /users/user123/patients/patient456/soap_notes/soap789.
     * @deny (create) - User with UID 'user456' cannot create a soap note document under /users/user123/patients/patient456/soap_notes/soap789 (mismatched userId).
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/patients/{patientId}/soap_notes/{soapNoteId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Rules for /users/{userId}/patients/{patientId}/instructions/{instructionId} collection.
     * @path /users/{userId}/patients/{patientId}/instructions/{instructionId}
     * @allow (create) - User with UID 'user123' can create an instruction document under /users/user123/patients/patient456/instructions/instruction789.
     * @allow (get) - User with UID 'user123' can read an instruction document under /users/user123/patients/patient456/instructions/instruction789.
     * @allow (list) - User with UID 'user123' can list instruction documents under /users/user123/patients/patient456/instructions.
     * @allow (update) - User with UID 'user123' can update an instruction document under /users/user123/patients/patient456/instructions/instruction789.
     * @allow (delete) - User with UID 'user123' can delete an instruction document under /users/user123/patients/patient456/instructions/instruction789.
     * @deny (create) - User with UID 'user456' cannot create an instruction document under /users/user123/patients/patient456/instructions/instruction789 (mismatched userId).
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/patients/{patientId}/instructions/{instructionId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
  }
}